# Run docker-compose up -d
# Run docker-compose exec sentry sentry upgrade to setup database and create admin user
# (Optional) Run docker-compose exec sentry pip install sentry-slack if you want slack plugin, it can be done later
# Run docker-compose restart sentry
# Sentry is now running on public port 9000
# refs: https://gist.github.com/denji/b801f19d95b7d7910982c22bb1478f96

version: '2'

services:
  redis:
    image: redis:3.2.11-alpine
    volumes:
     - ./redis:/data

  postgres:
    image: postgres:9.6.6-alpine
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DBNAME: sentry
      POSTGRES_DBUSER: sentry
      POSTGRES_DBPASS: sentry
    volumes:
     - ./pgdb:/var/lib/postgresql/data

  sentry:
    image: sentry:8.22.0
    links:
     - redis
     - postgres
    ports:
     - 9000:9000
    environment:
      SENTRY_SECRET_KEY: 'jLsNbBoxXW8FptgmaJiRxiMTyZmcMHhh'
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: redis
    volumes:
     - ./config.yml:/etc/sentry/config.yml
     - ./sentry.conf.py:/etc/sentry/sentry.conf.py

  cron:
    image: sentry:8.22.0
    links:
     - redis
     - postgres
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: 'jLsNbBoxXW8FptgmaJiRxiMTyZmcMHhh'
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: redis
    volumes:
     - ./config.yml:/etc/sentry/config.yml
     - ./sentry.conf.py:/etc/sentry/sentry.conf.py

  worker:
    image: sentry:8.22.0
    links:
     - redis
     - postgres
    command: "sentry run worker"
    environment:
      SENTRY_SECRET_KEY: 'jLsNbBoxXW8FptgmaJiRxiMTyZmcMHhh'
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: redis
    volumes:
     - ./config.yml:/etc/sentry/config.yml
     - ./sentry.conf.py:/etc/sentry/sentry.conf.py
