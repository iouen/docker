input {
    beats {
        port => 5044
    }
    dead_letter_queue {
        path => "/data/dead_letter_queue" 
        commit_offsets => true 
    }
}


filter {
    #json {
    #    source => "message"
    #    target => "docker-log"
    #}
    grok {
         match => { "log" => ["%{TIMESTAMP_ISO8601:[time]} \[%{DATA:[service_name]},(?:%{DATA:[trace_id]}),(?:%{DATA:[span_id]}),(?:%{DATA:[span_export]})\] \[%{WORD:[level]}\]"] }
    }

    #mutate {
    #   rename => { "@timestamp" => "read_timestamp" }
    #}
    #date {
    #     #2017-09-02 11:00:38.132
    #     match => [ "[time]", "yyyy-MM-dd HH:mm:ss" ]
    #    remove_field => "[time]"
    #}
}

output {
  #elasticsearch {
  #  hosts => "http://192.168.2.32:9200"
  #  manage_template => false
  #  index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
  #  document_type => "%{[@metadata][type]}"
  #}

    stdout { codec => rubydebug }


    if [service_name] {
        file {
            codec => line {
                format => "%{[log]}"
            }
            path => "/data/%{service_name}/%{service_name}-%{+YYYY-MM-dd}.log"
        }
    } else {
        file {
            codec => line {
                format => "%{[log]}"
            }
            path => "/data/unknown/%{+YYYY-MM-dd}.log"
        }
    }


}
